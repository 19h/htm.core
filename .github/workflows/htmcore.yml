name: htm.core build

on:
  push:
    branches:
      - v*\.*\.*\.* # vX.Y.Z release tag
  # run on pull_request events that target the master branch
  pull_request:
    branches:
    - master
  # run every day of the week from Monday - Friday at 02:00
  schedule:
  - cron: 0 2 * * 1-5
      
jobs:
  build:
    name: Building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      #max-parallel: 4
      matrix:
        python-version: [3.7]
        os: [ubuntu-18.04, windows-2019, macOS-latest, ubuntu-latest, ubuntu-16.04]
        # ubuntu-latest is used for valgrind and Debug build
        # ubuntu-16.04 is used for docker build for ARM64

    steps:
    - name: Docker image for ARM
      if: matrix.os == 'ubuntu-16.04' # ubuntu->QEMU->docker->ARM64 build
      run: |
        sudo apt-get install -y qemu-system docker.io
        sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
        uname -a
        sudo docker build -t htm-arm64-docker --build-arg arch=arm64 .

    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Config
      run: |
        python --version
        cmake --version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt

    - name: build htmcore with setup.py
      if: matrix.os != 'ubuntu-latest'
      run: |
        python setup.py install --user

    - name: Debug build htmcore with setup.py
      if: matrix.os == 'ubuntu-latest'
      env:
        CMAKE_BUILD_TYPE: Debug
      run: |
        echo "built type: ${CMAKE_BUILD_TYPE}"
        python setup.py install --user

    - name: C++ & Python Tests
      run: python setup.py test
      
    - name: Memory leaks check (valgrind)
      if: success() && matrix.os == 'ubuntu-latest'
      run:
        apt install valgrind
        LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${PWD}/build/Release/lib valgrind --leak-check=full --show-leak-kinds=definite,indirect,possible,reachable --track-origins=yes --num-callers=40 --error-exitcode=3 ./build/Release/bin/benchmark_hotgym 5 || exit 1


      #TODO build ARM64 on docker
      #TODO GH Releases
      #TODO PYPI deploy
